router
  .post(
    "/users/auth/sign-up",
    validators.users.signUpPayloadValidation,
    middlewares.validation.request,
    middlewares.email_format.format,
    middlewares.request_validation.requestValidation("Users"),
    actions.users.post.signup
  )
  .get(
    "/users/get-profile/:id?",
    validators.users.getProfile,
    middlewares.validation.request,
    actions.users.get.getProfile
  )
  .patch(
    "/users/complete-profile",
    validators.users.completeProfilePayloadValidation,
    middlewares.validation.request,
    middlewares.email_format.format,
    middlewares.request_validation.requestValidation("Users"),
    actions.users.patch.completeProfile
  )
  .post(
    "/users/auth/login",
    validators.users.signInPayloadValidation,
    middlewares.validation.request,
    middlewares.email_format.format,
    middlewares.local_passport.authenticate,
    actions.users.post.login
  )
  .get(
    "/users/auth/logout",
    middlewares.validation.request,
    actions.users.get.logout
  )
  .patch(
    "/users/update",
    validators.users.updatePayloadValidation,
    middlewares.email_format.format,
    middlewares.request_validation.requestValidation("Users"),
    middlewares.validation.request,
    actions.users.patch.update
  )
  .get(
    "/users/auth/google",
    passport.authenticate("google", {
      scope: ["profile", "email"],
    })
  )
  .get(
    "/users/auth/google/callback",
    passport.authenticate("google", { session: false }),
    actions.users.get.googleCb
  )
  .get(
    "/users/auth/facebook",
    passport.authorize("facebook", { scope: ["email"] })
  )
  .get(
    "/users/auth/facebook/callback",
    passport.authenticate("facebook", { session: false }),
    actions.users.get.facebookCb
  )
  .post(
    "/users/auth/verify-code",
    validators.users.verifyCodePayloadValidation,
    middlewares.validation.request,
    middlewares.email_format.format,
    actions.users.post.verifyCode
  )
  .post(
    "/users/auth/resend-code",
    validators.users.resendCodePayloadValidation,
    middlewares.validation.request,
    middlewares.email_format.format,
    actions.users.post.resendCode
  )
  .patch(
    "/users/auth/forgot-password",
    validators.users.forgotPasswordPayloadValidation,
    middlewares.validation.request,
    middlewares.email_format.format,
    actions.users.patch.forgotPassword
  )
  .patch(
    "/users/auth/verify-account",
    validators.users.forgotPasswordPayloadValidation,
    middlewares.validation.request,
    middlewares.email_format.format,
    actions.users.patch.forgotPassword
  )
  .patch(
    "/users/auth/reset-password",
    validators.users.resetPasswordPayload,
    middlewares.validation.request,
    middlewares.email_format.format,
    actions.users.patch.resetPassword
  );

module.exports = { prefix: "users", router };
